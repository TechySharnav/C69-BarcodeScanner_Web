{"version":3,"sources":["assets/barcodeScanner.png","App.js"],"names":["module","exports","App","getCameraPermission","a","async","Permissions","status","setState","hasCameraPermission","handleBarcodeScan","res","console","log","isScanned","ScannedData","data","buttonState","state","permissionGranted","this","style","marginTop","textAlign","display","alignSelf","justifyContent","width","height","onBarCodeRead","undefined","onBarCodeScanned","fontSize","source","require","resizeMode","marginRight","onPress","backgroundColor","borderRadius","color","Component"],"mappings":"+GAAAA,EAAOC,QAAU,IAA0B,4C,spBCKtBC,E,gCACnB,aAAe,IAAD,sBACZ,gBAUFC,oBAAsB,4BAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACKE,IAAqBA,MAD1B,gBACZC,EADY,EACZA,OAER,EAAKC,SAAS,CACZC,oBAAgC,YAAXF,IAJH,6DAXR,EAmBdG,kBAAoB,SAACC,GACnBC,QAAQC,IAAI,uBACZ,EAAKL,SAAS,CACZM,WAAW,EACXC,YAAaJ,EAAIK,KACjBC,YAAa,YArBf,EAAKC,MAAQ,CACXT,oBAAqB,KACrBK,WAAW,EACXC,YAAa,GACbE,YAAa,UAPH,E,6CA4BJ,IAAD,OACHE,EAAoBC,KAAKF,MAAMT,oBAC/BK,EAAYM,KAAKF,MAAMJ,UAG3B,MAAoB,YAFFM,KAAKF,MAAMD,aAEIE,EAE7B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAME,MAAO,CAAEC,UAAW,GAAIC,UAAW,WAAzC,uBAGA,kBAAC,IAAD,CACEF,MAAO,CACLG,QAAS,OACTC,UAAW,SACXC,eAAgB,SAChBC,MAAO,MACPC,OAAQ,MACRN,WAAY,IAEdO,cAAef,OAAYgB,EAAYV,KAAKV,kBAC5CqB,iBAAkBjB,OAAYgB,EAAYV,KAAKV,qBAMnD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMW,MAAO,CAAEW,SAAU,GAAIT,UAAW,SAAUD,UAAW,MAA7D,0BAGA,kBAAC,IAAD,CACEW,OAAQC,EAAQ,KAChBb,MAAO,CACLI,UAAW,SACXE,MAAO,MACPC,OAAQ,MACRO,WAAY,UACZC,YAAa,GACbd,UAAW,MAGf,kBAAC,IAAD,CACEe,QAAS,WACP,EAAKlC,sBACL,EAAKK,SAAS,CAAES,YAAa,aAE/BI,MAAO,CACLiB,gBAAiB,UACjBC,aAAc,EACdjB,UAAW,GACXK,MAAO,MACPF,UAAW,WAGb,kBAAC,IAAD,CAAMJ,MAAO,CAAEE,UAAW,SAAUiB,MAAO,UAA3C,SAEF,kBAAC,IAAD,CAAMnB,MAAO,CAAEE,UAAW,SAAUD,UAAW,KAC5CH,EAAoBC,KAAKF,MAAMH,YAAc,yB,GAvFzB0B,e","file":"static/js/app.a662b153.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/barcodeScanner.68fe7a69.png\";","import React, { Component } from \"react\";\nimport { View, Text, Image, TouchableOpacity, Stylesheet } from \"react-native\";\nimport * as Permissions from \"expo-permissions\";\nimport { BarCodeScanner } from \"expo-barcode-scanner\";\n\nexport default class App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      hasCameraPermission: null,\n      isScanned: false,\n      ScannedData: \"\",\n      buttonState: \"normal\",\n    };\n  }\n\n  getCameraPermission = async () => {\n    const { status } = await Permissions.askAsync(Permissions.CAMERA);\n\n    this.setState({\n      hasCameraPermission: status === \"granted\",\n    });\n  };\n\n  handleBarcodeScan = (res) => {\n    console.log(\"Scan in Progress...\");\n    this.setState({\n      isScanned: false,\n      ScannedData: res.data,\n      buttonState: \"normal\",\n    });\n  };\n\n  render() {\n    var permissionGranted = this.state.hasCameraPermission;\n    var isScanned = this.state.isScanned;\n    var buttonState = this.state.buttonState;\n\n    if (buttonState === \"clicked\" && permissionGranted) {\n      return (\n        <View>\n          <Text style={{ marginTop: 50, textAlign: \"center\" }}>\n            SCAN IN PROGRESS...\n          </Text>\n          <BarCodeScanner\n            style={{\n              display: \"flex\",\n              alignSelf: \"center\",\n              justifyContent: \"center\",\n              width: \"90%\",\n              height: \"90%\",\n              marginTop: -50,\n            }}\n            onBarCodeRead={isScanned ? undefined : this.handleBarcodeScan}\n            onBarCodeScanned={isScanned ? undefined : this.handleBarcodeScan}\n          ></BarCodeScanner>\n        </View>\n      );\n    } else {\n      return (\n        <View>\n          <Text style={{ fontSize: 18, textAlign: \"center\", marginTop: 100 }}>\n            Scan a Barcode/QR Code\n          </Text>\n          <Image\n            source={require(\"./assets/barcodeScanner.png\")}\n            style={{\n              alignSelf: \"center\",\n              width: \"40%\",\n              height: \"40%\",\n              resizeMode: \"contain\",\n              marginRight: 20,\n              marginTop: 30,\n            }}\n          />\n          <TouchableOpacity\n            onPress={() => {\n              this.getCameraPermission();\n              this.setState({ buttonState: \"clicked\" });\n            }}\n            style={{\n              backgroundColor: \"#1e1e1e\",\n              borderRadius: 6,\n              marginTop: 50,\n              width: \"40%\",\n              alignSelf: \"center\",\n            }}\n          >\n            <Text style={{ textAlign: \"center\", color: \"white\" }}>SCAN</Text>\n          </TouchableOpacity>\n          <Text style={{ textAlign: \"center\", marginTop: 70 }}>\n            {permissionGranted ? this.state.ScannedData : \"No Data to show.\"}\n          </Text>\n        </View>\n      );\n    }\n  }\n}\n"],"sourceRoot":""}